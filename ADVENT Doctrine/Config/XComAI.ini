; Shadow Ops AI patch

[XComGame.XGAIBehavior]
+m_arrMoveWeightProfile=(Profile=Advent_Generic, fCoverWeight=3.0f, fDistanceWeight=4.0f, fFlankingWeight=2.0f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=3.0f, fAllyVisWeight=3.0f, fCloseModifier=1.0f, fFarModifier=1.0f) 
+m_arrMoveWeightProfile=(Profile=Advent_Leader, fCoverWeight=4.0f, fDistanceWeight=3.0f, fFlankingWeight=0.5f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=3.0f, fAllyVisWeight=3.0f, fCloseModifier=0.9f, fFarModifier=1.1f) 
+m_arrMoveWeightProfile=(Profile=Advent_NoCover, fCoverWeight=0.0f, fDistanceWeight=4.0f, fFlankingWeight=2.0f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=3.0f, fAllyVisWeight=3.0f, fCloseModifier=1.0f, fFarModifier=1.0f) 
+m_arrMoveWeightProfile=(Profile=Sectoid, fCoverWeight=4.0f, fDistanceWeight=1.0f, fFlankingWeight=0.5f, fEnemyVisWeight=-2.0f, fEnemyVisWeightPeak1=3.5f, fAllyVisWeight=0.5f, fCloseModifier=0.9f, fFarModifier=1.1f) 
+m_arrMoveWeightProfile=(Profile=Viper, fCoverWeight=2.0f, fDistanceWeight=2.0f, fFlankingWeight=3.0f, fEnemyVisWeight=2.0f, fEnemyVisWeightPeak1=0.0f, fAllyVisWeight=-0.5f, fCloseModifier=1.1f, fFarModifier=0.9f) 
+m_arrMoveWeightProfile=(Profile=Viper_Pull, fCoverWeight=1.0f, fDistanceWeight=2.0f, fFlankingWeight=3.0f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=2.0f, fAllyVisWeight=-0.5f, fCloseModifier=0.8f, fFarModifier=1.2f) 

+m_arrMoveWeightProfile=(Profile=Dummy, fCoverWeight=2.0f, fDistanceWeight=0.5f, fFlankingWeight=0.5f, fEnemyVisWeight=-3.0f, fEnemyVisWeightPeak1=0.0f, fAllyVisWeight=1.0f, fCloseModifier=0.9f, fFarModifier=1.1f) 

[XComGame.X2AIBTBehaviorTree]
+Behaviors=(BehaviorName=FindDestination-Advent_Generic, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Advent_Leader, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Advent_NoCover, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Sectoid, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Viper, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Viper_Pull, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Advent_Generic, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Advent_Leader, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Advent_NoCover, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Sectoid, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Viper, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Viper_Pull, NodeType=Action)

+Behaviors=(BehaviorName=IsMyJob-Artillery,	NodeType=Condition)


+Behaviors=(BehaviorName=HasAtLeastTwoVisibleAllies, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">=", Param[2]="2")
+Behaviors=(BehaviorName=HasAtLeastTwoVisibleEnemies, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]=">=", Param[2]="2")
+Behaviors=(BehaviorName=HasAtLeastThreeVisibleEnemies, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]=">=", Param[2]="3")
+Behaviors=(BehaviorName=HasSuppressor, NodeType=StatCondition, Param[0]=SuppressorCount, Param[1]=">", Param[2]="0")
+Behaviors=(BehaviorName=ExactlyOneOverwatcher, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]="=", Param[2]="1")
+Behaviors=(BehaviorName=NoMoreThanOneOverwatcher, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]="<", Param[2]="2")
+Behaviors=(BehaviorName=HasOverwatchingTeammate, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">", Param[2]="0", Param[3]="1")
+Behaviors=(BehaviorName=NotLeader, NodeType=Inverter, Child[0]=IsMyJob-Leader)


; ------------- ADVENT Doctrine -------------

; For reference, the default AI job list in order is:
; Leader, Aggressor, Soldier, Artillery, Support, Flanker, Soldier, Scout*, Soldier, Observer (x6)
; Note that Scout can be filled by a group not in combat
; Some missions have additional out-of-combat jobs: Terrorist, Hunter, Charger, Defender
;
; The movement priorities of the jobs are:
; 5 Support
; 10 Scout, Soldier, Aggressor
; 20 Leader
; 50 Artillery
; 60 Observer, Flanker, misc. out-of-combat jobs

; All ADVENT troops use the same behavior trees, but there are some tree nodes that depend on job. Those are:
; - Flanker: Will do a flanking dash move to break overwatch
; - Leader: Uses a different movement weight profile, and will use Mark Target if available; will grenade and micro-missile
; - Aggressor: Will do a flanking dash move to break overwatch
; - Artillery: Will move to grenade position, will grenade and micro-missile
; - Support: Will move to suppress position, will suppress aggressively
; - Soldier: Will suppress if no good shot

; Template-specific stuff
+Behaviors=(BehaviorName=TemplateNameIs-AdvMEC_M1, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AdvMEC_M2, NodeType=Condition)

+Behaviors=(BehaviorName=UsesNoCoverMovement, NodeType=Selector, Child[0]=TemplateNameIs-AdvMEC_M1, Child[1]=TemplateNameIs-AdvMEC_M2)
+Behaviors=(BehaviorName=TrySetNoCoverMovement, NodeType=Sequence, Child[0]=UsesNoCoverMovement, Child[1]=SetNoCoverMovement)
+Behaviors=(BehaviorName=MaybeSetNoCoverMovement, NodeType=Successor, Child[0]=TrySetNoCoverMovement)

; ADVENT movement selection by job
+Behaviors=(BehaviorName=MoveByJob-Advent, NodeType=Selector, Child[0]=SelectMoveNoCover-Advent, Child[1]=SelectMoveIfLeader-Advent, Child[2]=Move-Advent_Generic)
+Behaviors=(BehaviorName=SelectMoveNoCover-Advent, NodeType=Sequence, Child[0]=UsesNoCoverMovement, Child[1]=Move-Advent_NoCover)
+Behaviors=(BehaviorName=SelectMoveIfLeader-Advent, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=Move-Advent_Leader)

+Behaviors=(BehaviorName=DashMoveByJob-Advent, NodeType=Selector, Child[0]=SelectDashMoveNoCover-Advent, Child[1]=SelectDashMoveIfLeader-Advent, Child[2]=DashMove-Advent_Generic)
+Behaviors=(BehaviorName=SelectDashMoveNoCover-Advent, NodeType=Sequence, Child[0]=UsesNoCoverMovement, Child[1]=DashMove-Advent_NoCover)
+Behaviors=(BehaviorName=SelectDashMoveIfLeader-Advent, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=DashMove-Advent_Leader)

+Behaviors=(BehaviorName=FindRestrictedDestinationByJob-Advent, NodeType=Selector, Child[0]=FindRestrictedDestinationNoCover-Advent, Child[1]=FindRestrictedDestinationIfLeader-Advent, Child[2]=FindRestrictedDestination-Advent_Generic)
+Behaviors=(BehaviorName=FindRestrictedDestinationNoCover-Advent, NodeType=Sequence, Child[0]=UsesNoCoverMovement, Child[1]=FindRestrictedDestination-Advent_NoCover)
+Behaviors=(BehaviorName=FindRestrictedDestinationIfLeader-Advent, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=FindRestrictedDestination-Advent_Leader)

+Behaviors=(BehaviorName=Move-Advent_Generic, NodeType=Sequence, Child[0]=SafeToMove-Advent, Child[1]=MoveUnsafe-Advent_Generic)
+Behaviors=(BehaviorName=MoveUnsafe-Advent_Generic, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Advent_Generic, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=Move-Advent_Leader, NodeType=Sequence, Child[0]=SafeToMove-Advent, Child[1]=MoveUnsafe-Advent_Leader)
+Behaviors=(BehaviorName=MoveUnsafe-Advent_Leader, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Advent_Leader, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=Move-Advent_NoCover, NodeType=Sequence, Child[0]=SafeToMove-Advent, Child[1]=MoveUnsafe-Advent_NoCover)
+Behaviors=(BehaviorName=MoveUnsafe-Advent_NoCover, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Advent_NoCover, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=DashMove-Advent_Generic, NodeType=Sequence, Child[0]=SafeToMove-Advent, Child[1]=DashMoveUnsafe-Advent_Generic)
+Behaviors=(BehaviorName=DashMoveUnsafe-Advent_Generic, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=UseDashMovement, Child[2]=FindDestination-Advent_Generic, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=DashMove-Advent_Leader, NodeType=Sequence, Child[0]=SafeToMove-Advent, Child[1]=DashMoveUnsafe-Advent_Leader)
+Behaviors=(BehaviorName=DashMoveUnsafe-Advent_Leader, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=UseDashMovement, Child[2]=FindDestination-Advent_Leader, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=DashMove-Advent_NoCover, NodeType=Sequence, Child[0]=SafeToMove-Advent, Child[1]=DashMoveUnsafe-Advent_NoCover)
+Behaviors=(BehaviorName=DashMoveUnsafe-Advent_NoCover, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=UseDashMovement, Child[2]=FindDestination-Advent_NoCover, Child[3]=SelectAbility-StandardMove)

; Flanking moves are used by ADVENT with the Agggressor job. They have relaxed "safe" restrictions to draw overwatch.
+Behaviors=(BehaviorName=FindFlankDestination-Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=MaybeSetNoCoverMovement, Child[2]=RestrictToFlanking, Child[3]=RestrictToEnemyLoS, Child[4]=FindRestrictedDestinationByJob-Advent)
+Behaviors=(BehaviorName=FindFlankDashDestination-Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=MaybeSetNoCoverMovement, Child[2]=RestrictToFlanking, Child[3]=RestrictToEnemyLoS, Child[4]=UseDashMovement, Child[5]=FindRestrictedDestinationByJob-Advent)

+Behaviors=(BehaviorName=TryFlankingMove-Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoMoreThanOneOverwatcher, Child[2]=TryFlankingMoveUnsafe-Advent)
+Behaviors=(BehaviorName=TryFlankingMoveUnsafe-Advent, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDestination-Advent, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryFlankingDashMove-Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=TryFlankingDashMoveUnsafe-Advent)
+Behaviors=(BehaviorName=TryFlankingDashMoveUnsafe-Advent, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDashDestination-Advent, Child[2]=SelectAbility-StandardMove)

; Special SafeToMove behavior with no randomness.
+Behaviors=(BehaviorName=SafeToMove-Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoVisibleOverwatchers)

; Currently unused
+Behaviors=(BehaviorName=ReloadIfShotAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot, Child[2]=NeedsReload)

; These are changed to take all randomness out of the ADVENT AI's decision-making for overwatch. They are, after all, predictable.
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch-Advent, NodeType=Selector, Child[0]=ConsiderTakingOverwatch-Advent, Child[1]=ShootIfAvailable, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ConsiderTakingOverwatch-Advent, NodeType=Selector, Child[0]=ConsiderTakingOverwatchAllUnits-Advent)
+Behaviors=(BehaviorName=ConsiderTakingOverwatchAllUnits-Advent, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=NoOverwatchingTeammates, Child[2]=HasAtLeastThreeVisibleEnemies, Child[3]=HasAtLeastTwoVisibleAllies, Child[4]=TryOverwatch)

; Job-specific behaviors

+Behaviors=(BehaviorName=TryJobSpecificMove-Advent, NodeType=Selector, \\
	Child[0]=TryFlankIfAggressor-Advent, \\
	Child[1]=TryFlankIfFlanker-Advent, \\
	Child[2]=TryMoveForSuppressionIfSupport-Advent, \\
	Child[3]=TryMoveForGrenadeIfArtillery-Advent, \\
	Child[4]=TryMoveForMicroMissilesIfArtillery-Advent)
+Behaviors=(BehaviorName=TryJobSpecificAction-Advent, NodeType=Selector, \\
	Child[0]=TryMarkTargetOptionIfLeader, \\
	Child[1]=TryGrenadeIfLeader, \\
	Child[2]=TryMicroMissilesIfLeader, \\
	Child[3]=TryMicroMissilesMk2IfLeader, \\
	Child[4]=SuppressIfAvailableIfSupport, \\
	Child[5]=ConsiderSuppressionIfSoldier, \\
	Child[6]=TryGrenadeIfArtillery, \\
	Child[7]=TryMicroMissilesIfArtillery, \\
	Child[8]=TryMicroMissilesMk2IfArtillery)

+Behaviors=(BehaviorName=TryFlankIfAggressor-Advent, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AllShotPercentagesBelow50, Child[2]=IsMyJob-Aggressor, Child[3]=TryFlankingMove-Advent, Child[4]=TryFlankingDashMove-Advent)
+Behaviors=(BehaviorName=TryFlankIfFlanker-Advent, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AllShotPercentagesBelow50, Child[2]=IsMyJob-Flanker, Child[3]=TryFlankingMove-Advent, Child[4]=TryFlankingDashMove-Advent)

;+Behaviors=(BehaviorName=TryFlankNoCoverIfAggressor-Advent, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AllShotPercentagesBelow50, Child[2]=IsMyJob-Aggressor, Child[3]=TryFlankingMoveNoCover-Advent, Child[4]=TryFlankingDashNoCover-Advent)
;+Behaviors=(BehaviorName=TryFlankNoCoverIfFlanker-Advent, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AllShotPercentagesBelow50, Child[2]=IsMyJob-Flanker, Child[3]=TryFlankingMoveNoCover-Advent, Child[4]=TryFlankingDashNoCover-Advent)

+Behaviors=(BehaviorName=TryMarkTargetOptionIfLeader, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=TryMarkTargetOption)

+Behaviors=(BehaviorName=TryMoveForGrenadeIfArtillery-Advent, NodeType=Sequence, Child[0]=IsMyJob-Artillery, Child[1]=TryMoveForGrenade-Advent)
+Behaviors=(BehaviorName=TryGrenadeIfArtillery, NodeType=Sequence, Child[0]=IsMyJob-Artillery, Child[1]=TryGrenade)
+Behaviors=(BehaviorName=TryGrenadeIfLeader, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=TryGrenade)

+Behaviors=(BehaviorName=TryMoveForMicroMissilesIfArtillery-Advent, NodeType=Sequence, Child[0]=IsMyJob-Artillery, Child[1]=TryMoveForMicroMissiles-Advent)
+Behaviors=(BehaviorName=TryMicroMissilesIfArtillery, NodeType=Sequence, Child[0]=IsMyJob-Artillery, Child[1]=TryMicroMissiles)
+Behaviors=(BehaviorName=TryMicroMissilesMk2IfArtillery, NodeType=Sequence, Child[0]=IsMyJob-Artillery, Child[1]=TemplateNameIs-AdvMEC_M2, Child[2]=TryMicroMissilesMk2)
+Behaviors=(BehaviorName=TryMicroMissilesIfLeader, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=TryMicroMissiles)
+Behaviors=(BehaviorName=TryMicroMissilesMk2IfLeader, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=TemplateNameIs-AdvMEC_M2, Child[2]=TryMicroMissilesMk2)

;  SuppressIfAvailable will always try to suppress, while ConsiderSuppression only suppresses if there are no good shot targets (hit >= 50)
+Behaviors=(BehaviorName=TryMoveForSuppressionIfSupport-Advent, NodeType=Sequence, Child[0]=IsMyJob-Support, Child[1]=TryMoveForSuppression-Advent)
;+Behaviors=(BehaviorName=TryMoveNoCoverForSuppressionIfSupport-Advent, NodeType=Sequence, Child[0]=IsMyJob-Support, Child[1]=TryMoveNocoverForSuppression-Advent)
+Behaviors=(BehaviorName=SuppressIfAvailableIfSupport, NodeType=Sequence, Child[0]=IsMyJob-Support, Child[1]=SuppressIfAvailable)
+Behaviors=(BehaviorName=ConsiderSuppressionIfSoldier, NodeType=Sequence, Child[0]=IsMyJob-Soldier, Child[1]=ConsiderSuppression)

+Behaviors=(BehaviorName=TryMoveForGrenade-Advent, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-ThrowGrenade, Child[2]=FindPotentialAoETargets-GrenadeProfile, Child[3]=MoveAdventIfFirstAbility-Grenade)
+Behaviors=(BehaviorName=MoveAdventIfFirstAbility-Grenade, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindGrenadeDestination-Advent, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindGrenadeDestination-Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=MaybeSetNoCoverMovement, Child[2]=RestrictToAbilityRange-ThrowGrenade, Child[3]=RestrictToEnemyLoS, Child[4]=FindRestrictedDestinationByJob-Advent)

+Behaviors=(BehaviorName=TryMoveForMicroMissiles-Advent, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-MicroMissiles, Child[2]=FindPotentialAoETargets-MicroMissilesProfile, Child[3]=MoveAdventIfFirstAbility-MicroMissiles)
+Behaviors=(BehaviorName=MoveAdventIfFirstAbility-MicroMissiles, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindMicroMissilesDestination-Advent, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindMicroMissilesDestination-Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=MaybeSetNoCoverMovement, Child[2]=RestrictToAbilityRange-MicroMissiles, Child[3]=RestrictToEnemyLoS, Child[4]=FindRestrictedDestinationByJob-Advent)

; Suppression

+Behaviors=(BehaviorName=TryMoveThenSuppression-Advent, NodeType=Selector, Child[0]=TryMoveForSuppression-Advent, Child[1]=SuppressIfAvailable)
+Behaviors=(BehaviorName=TryMoveForSuppression-Advent, NodeType=Sequence, Child[0]=SafeToMove-Advent, Child[1]=IsAbilityReady-Suppression, Child[2]=SelectTargetForSuppressionByAim, Child[3]=MoveAdventIfFirstAbility-Suppression)

+Behaviors=(BehaviorName=FindSuppressionDestination-Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=MaybeSetNoCoverMovement, Child[2]=RestrictToAbilityRange-Suppression, Child[3]=RestrictToEnemyLoS, Child[4]=FindRestrictedDestinationByJob-Advent)
+Behaviors=(BehaviorName=MoveAdventIfFirstAbility-Suppression, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindSuppressionDestination-Advent, Child[3]=SelectAbility-StandardMove)

; -------------------- ADVENT Trooper AI BEHAVIOR TREE NODES BEGIN ------------

; This covers all the ADVENT unit types (trooper, captain, stun lancer, MEC, and shieldbearer).
; The goal is to give ADVENT units simple, predictable behavior that is still tactically
; effective. There are only two move profiles, one for the current leader and one for other
; units. Other jobs make a difference primarily in action selection.

-Behaviors=(BehaviorName=AdventRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrAggressive, \\
	Child[2]=TryMoveThenGrenade, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdventRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=TryMoveForEnergyShield-Advent, \\
	Child[2]=TryEnergyShieldOnMultipleTargets, \\
	Child[3]=TryJobSpecificMove-Advent, \\
	Child[4]=DoIfFlankedMove, \\
	Child[5]=TryJobSpecificAction-Advent, \\
	Child[6]=NeedsReload, \\
	Child[7]=MoveByJob-Advent, \\
	Child[8]=TryShootOrReloadOrOverwatch-Advent, \\
	Child[9]=DashMoveByJob-Advent, \\
	Child[10]=HuntEnemyWithCover)

-Behaviors=(BehaviorName=AdventRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrAggressive)
+Behaviors=(BehaviorName=AdventRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryEnergyShieldOnAnyTarget, \\
	Child[1]=TryJobSpecificAction-Advent, \\
	Child[2]=TryShootOrReloadOrOverwatch-Advent, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=MoveByJob-Advent)

; -------------------- ADVENT Captain AI BEHAVIOR TREE NODES BEGIN ------------
-Behaviors=(BehaviorName=AdvCaptain_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryMarkTargetOption, \\
	Child[2]=SelectMove_JobOrDefensive, \\
	Child[3]=AdvCaptainTryMoveThenGrenade, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdvCaptain_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedFirstActionSelector)

-Behaviors=(BehaviorName=AdvCaptain_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMarkTargetOption, \\
	Child[1]=AdvCaptainTryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrDefensive)
+Behaviors=(BehaviorName=AdvCaptain_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedLastActionSelector)

; -------------------- ADVENT Stun Lancer AI BEHAVIOR TREE NODES BEGIN --------
-Behaviors=(BehaviorName=AdventSLFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=SelectMove_JobOrMelee, \\
	Child[3]=TryMoveThenGrenade, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdventSLFirstActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedFirstActionSelector)

-Behaviors=(BehaviorName=AdventSLLastActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=TryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrMelee)
+Behaviors=(BehaviorName=AdventSLLastActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedLastActionSelector)

+Behaviors=(BehaviorName=ScoreTargetIfPriorityObject, NodeType=Sequence, Child[0]=TargetIsPriorityObject, Child[1]=AddToTargetScore_0)
+Behaviors=(BehaviorName=TargetScoreAvoidPriorityObject, NodeType=Selector, Child[0]=ScoreTargetIfPriorityObject, Child[1]=AddToTargetScore_50)
+Behaviors=(BehaviorName=ScoreTargetIfClosestValidTarget, NodeType=Sequence, Child[0]=TargetIsClosestValidTarget, Child[1]=AddToTargetScore_20)
+Behaviors=(BehaviorName=TargetScoreClosestValidTarget, NodeType=Selector, Child[0]=ScoreTargetIfClosestValidTarget, Child[1]=AddToTargetScore_0)

-Behaviors=(BehaviorName=EvaluateTargetForStunLance, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian, )
+Behaviors=(BehaviorName=EvaluateTargetForStunLance, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian, Child[5]=TargetScoreAvoidPriorityObject, Child[6]=TargetScoreClosestValidTarget)

; -------------------- ADVENT ShieldBearer AI BEHAVIOR TREE NODES BEGIN -------
-Behaviors=(BehaviorName=ShieldBearerFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveForEnergyShield, \\
	Child[1]=TryEnergyShieldOnMultipleTargets, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=SelectMove_JobOrDefensive, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=TryShootOrReloadOrOverwatch)
+Behaviors=(BehaviorName=ShieldBearerFirstActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedFirstActionSelector)

-Behaviors=(BehaviorName=ShieldBearerLastActionSelector, NodeType=Selector, \\
	Child[0]=TryEnergyShieldOnAnyTarget, \\
	Child[1]=TryShootOrReloadOrOverwatch,  \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrDefensive)
+Behaviors=(BehaviorName=ShieldBearerLastActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedLastActionSelector)

+Behaviors=(BehaviorName=MoveAdventIfFirstAbility-EnergyShield, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindShieldDestinationAdvent, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryMoveForEnergyShield-Advent, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-EnergyShield, Child[2]=NotLastActionPoint, Child[3]=MoveAdventIfFirstAbility-EnergyShield)

+Behaviors=(BehaviorName=FindShieldDestinationAdvent, NodeType=Selector, Child[0]=FindShieldDestinationAdvent_MultipleUnits, Child[1]=FindShieldDestinationAdvent_BestUnit)
+Behaviors=(BehaviorName=FindShieldDestinationAdvent_MultipleUnits, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=MaybeSetNoCoverMovement, Child[2]=RestrictToAlliedAbilityRange-EnergyShield, Child[3]=AddAbilityRangeWeight-EnergyShield, Child[4]=FindRestrictedDestinationByJob-Advent)
+Behaviors=(BehaviorName=FindShieldDestinationAdvent_BestUnit, NodeType=Sequence, Child[0]=SelectPotentialTargetForEnergyShield, Child[1]=ResetDestinationSearch, Child[2]=MaybeSetNoCoverMovement, Child[3]=RestrictToPotentialTargetRange-EnergyShield, Child[4]=FindRestrictedDestinationByJob-Advent)

; -------------------- ADVENT MEC ---------------------------------------------
-Behaviors=(BehaviorName=MECFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveThenMicroMissiles, \\
	Child[1]=SelectNCMove_JobOrFanatic, \\
	Child[2]=HuntEnemy, \\
	Child[3]=TryShootOrReloadOrOverwatch)
+Behaviors=(BehaviorName=MECFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryJobSpecificMove-Advent, \\
	Child[1]=TryJobSpecificAction-Advent, \\
	Child[2]=NeedsReload, \\
	Child[3]=MoveByJob-Advent, \\
	Child[4]=TryShootOrReloadOrOverwatch-Advent, \\
	Child[5]=HuntEnemy)

-Behaviors=(BehaviorName=MECRedLastActionSelector, NodeType=Selector,\\
	Child[0]=TryMicroMissiles, \\
	Child[1]=ShootOrSuppressIfNoGoodShot, \\
	Child[2]=HuntEnemy, \\
	Child[3]=SelectNCMove_JobOrFanatic, \\
	Child[4]=TryShootOrReloadOrOverwatch)
+Behaviors=(BehaviorName=MECRedLastActionSelector, NodeType=Selector,\\
	Child[0]=TryJobSpecificAction-Advent, \\
	Child[1]=TryShootOrReloadOrOverwatch-Advent, \\
	Child[2]=HuntEnemy, \\
	Child[3]=MoveByJob-Advent)

; -------------------- ADVENT MEC Mk2 -----------------------------------------

-Behaviors=(BehaviorName=MECMk2FirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveThenMicroMissilesMk2, \\
	Child[1]=SelectNCMove_JobOrFanatic, \\
	Child[2]=HuntEnemy, \\
	Child[3]=TryShootOrReloadOrOverwatch)
+Behaviors=(BehaviorName=MECMk2FirstActionSelector, NodeType=Selector, \\
	Child[0]=MECFirstActionSelector)

-Behaviors=(BehaviorName=MECMk2RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMicroMissilesMk2, \\
	Child[1]=ShootOrSuppressIfNoGoodShot, \\
	Child[2]=HuntEnemy, \\
	Child[3]=SelectNCMove_JobOrFanatic, \\
	Child[4]=TryShootOrReloadOrOverwatch)
+Behaviors=(BehaviorName=MECMk2RedLastActionSelector, NodeType=Selector, \\
	Child[0]=MECRedLastActionSelector)

; -------------------- Sectoid AI BEHAVIOR TREE NODES BEGIN -------------------

; Sectoids are fundamentally cowardly, which they manifest by skulking around the outside of the
; battle trying to only engage one or two enemies at a time. When confronted by multiple enemies,
; they tend to either flee or fire their plasma pistols wildly. When not panicking they prefer
; to use their psi abilities, usually moving to avoid being seen by enemies other than their target.

-Behaviors=(BehaviorName=SectoidRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrDefensive, \\
	Child[2]=TryPsiReanimationOrMindSpinOption, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=SectoidRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove-Sectoid, \\
	Child[1]=TrySectoidPanic, \\
	Child[2]=TryMoveThenPsiReanimationOrMindSpin, \\
	Child[3]=Move-Sectoid, \\
	Child[4]=TryPsiReanimationOrMindSpinOption, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

-Behaviors=(BehaviorName=SectoidRedLastActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryPsiReanimationOrMindSpinOption, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrDefensive)
+Behaviors=(BehaviorName=SectoidRedLastActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove-Sectoid, \\
	Child[1]=TrySectoidPanic, \\
	Child[2]=TryPsiReanimationOrMindSpinOption, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=Move-Sectoid)

+Behaviors=(BehaviorName=TryMoveThenPsiReanimationOrMindSpin, NodeType=RandSelector, Child[0]=TryMoveThenPsiReanimation, Param[0]=66, Child[1]=TryMoveThenMindSpin, Param[1]=34)

; Sectoid movement
+Behaviors=(BehaviorName=Move-Sectoid, NodeType=Sequence, Child[0]=SafeToMove-Sectoid, Child[1]=MoveUnsafe-Sectoid)
+Behaviors=(BehaviorName=MoveUnsafe-Sectoid, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Sectoid, Child[2]=SelectAbility-StandardMove)

; Sectoid hiding - these use the standard Sectoid move profile, but restrict to tiles outside of enemy LOS.
+Behaviors=(BehaviorName=FindDestination-Sectoid_Hide, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictFromKnownEnemyLoS, Child[2]=FindRestrictedDestination-Sectoid)
+Behaviors=(BehaviorName=Move-Sectoid_Hide, NodeType=Sequence, Child[0]=SafeToMove-Sectoid, Child[1]=MoveUnsafe-Sectoid_Hide)
+Behaviors=(BehaviorName=MoveUnsafe-Sectoid_Hide, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Sectoid_Hide, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=FindDashDestination-Sectoid_Hide, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictFromKnownEnemyLoS, Child[2]=UseDashMovement, Child[3]=FindRestrictedDestination-Sectoid)
+Behaviors=(BehaviorName=DashMove-Sectoid_Hide, NodeType=Sequence, Child[0]=SafeToMove-Sectoid, Child[1]=DashMoveUnsafe-Sectoid_Hide)
+Behaviors=(BehaviorName=DashMoveUnsafe-Sectoid_Hide, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDashDestination-Sectoid_Hide, Child[2]=SelectAbility-StandardMove)

; Sectoids are cowardly and won't move if there are any suppressors or overwatchers.
+Behaviors=(BehaviorName=SafeToMove-Sectoid, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoVisibleOverwatchers)

; Special Sectoid "panic" behavior. A Sectoid in a scary situation has a 50% chance to try to flee to somewhere it can't
; be seen by enemies, and a 50% chance to shoot a random enemy.
+Behaviors=(BehaviorName=TrySectoidPanic, NodeType=Sequence, Child[0]=IsSectoidScared, Child[1]=SectoidPanic)
+Behaviors=(BehaviorName=IsSectoidScared, NodeType=Selector, Child[0]=HasSuppressor, Child[1]=SectoidOutnumberedCheck)
+Behaviors=(BehaviorName=SectoidPanic, NodeType=RandSelector, Child[0]=SectoidPanicMove, Param[0]=50, Child[1]=SectoidPanicFire, Param[1]=50)
+Behaviors=(BehaviorName=SectoidPanicMove, NodeType=Selector, Child[0]=Move-Sectoid_Hide, Child[1]=DashMoveUnsafe-Sectoid_Hide)
+Behaviors=(BehaviorName=SectoidPanicFire, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot-SectoidPanic, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot-SectoidPanic, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-StandardShot)

; A sectoid has a chance to panic if it sees at least two enemies. There is a 20% chance per enemy that the sectoid will
; panic. This works out to the following panic chances:
; Enemies	Chance
; 2			36.0%
; 3			48.8%
; 4			59.0%
; 5			67.2%
; 6			73.8%
+Behaviors=(BehaviorName=HasBTVar-SectoidPanicked, NodeType=Condition)
+Behaviors=(BehaviorName=SetSectoidPanickedTrue, NodeType=Action, Param[0]=SetBTVar, Param[1]="SectoidPanicked", Param[2]="1")
+Behaviors=(BehaviorName=SetSectoidPanickedFalse, NodeType=Action, Param[0]=SetBTVar, Param[1]="SectoidPanicked", Param[2]="0")
+Behaviors=(BehaviorName=IsSectoidPanicked, NodeType=StatCondition, Param[0]=BTVar, Param[1]="!=", Param[2]="0", Param[3]="SectoidPanicked")
+Behaviors=(BehaviorName=InitSectoidPanickedVar, NodeType=Selector, Child[0]=HasBTVar-SectoidPanicked, Child[1]=UpdateSectoidPanickedVar)
+Behaviors=(BehaviorName=UpdateSectoidPanickedVar, NodeType=Selector, Child[0]=TrySetSectoidPanickedTrue, Child[1]=SetSectoidPanickedFalse)
+Behaviors=(BehaviorName=TrySetSectoidPanickedTrue, NodeType=Sequence, Child[0]=SectoidPanicCheck, Child[1]=SetSectoidPanickedTrue)
+Behaviors=(BehaviorName=SectoidPanicCheck, NodeType=Sequence, Child[0]=HasAtLeastTwoVisibleEnemies, Child[1]=SetVisiblePotentialTargetStack, Child[2]=RepeatSectoidPanicRoll, Child[3]=PanicRollFailed)
+Behaviors=(BehaviorName=RepeatSectoidPanicRoll, NodeType=RepeatUntilFail, Child[0]=IterateSectoidPanicRoll)
+Behaviors=(BehaviorName=IterateSectoidPanicRoll, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=Roll80ToNotPanic, Child[2]=PanicRollPassed)
+Behaviors=(BehaviorName=Roll80ToNotPanic, NodeType=RandSelector, Child[0]=SetPanicFalse, Param[0]=80, Child[1]=SetPanicTrue, Param[1]=20)
+Behaviors=(BehaviorName=SetPanicTrue, NodeType=Action, Param[0]=SetBTVar, Param[1]="Panic", Param[2]="1")
+Behaviors=(BehaviorName=SetPanicFalse, NodeType=Action, Param[0]=SetBTVar, Param[1]="Panic", Param[2]="0")
+Behaviors=(BehaviorName=PanicRollFailed, NodeType=StatCondition, Param[0]=BTVar, Param[1]="!=", Param[2]="0", Param[3]="Panic")
+Behaviors=(BehaviorName=PanicRollPassed, NodeType=StatCondition, Param[0]=BTVar, Param[1]="==", Param[2]="0", Param[3]="Panic")

+Behaviors=(BehaviorName=SectoidOutnumberedCheck, NodeType=Sequence, Child[0]=InitSectoidPanickedVar, Child[1]=IsSectoidPanicked)

; Psi Reanimation behaviors
+Behaviors=(BehaviorName=IsAbilityReady-PsiReanimation, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-PsiReanimation, NodeType=Action)

+Behaviors=(BehaviorName=TryMoveThenPsiReanimation, NodeType=Selector, Child[0]=TryMoveForPsiReanimation, Child[1]=TryPsiReanimation)
+Behaviors=(BehaviorName=TryMoveForPsiReanimation, NodeType=Sequence, Child[0]=SafeToMove-Sectoid, Child[1]=IsAbilityReady-PsiReanimation, Child[2]=SelectTargetForPsiReanimation, Child[3]=MoveSectoidIfFirstAbility-PsiReanimation)
+Behaviors=(BehaviorName=MoveSectoidIfFirstAbility-PsiReanimation, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindPsiReanimationDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindPsiReanimationDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-PsiReanimation, Child[2]=FindRestrictedDestination-Sectoid)

; Mind Spin behaviors
+Behaviors=(BehaviorName=IsAbilityReady-MindSpin, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-MindSpin, NodeType=Action)

+Behaviors=(BehaviorName=TryMoveThenMindSpin, NodeType=Selector, Child[0]=TryMoveForMindSpin, Child[1]=TryMindSpinOption)
+Behaviors=(BehaviorName=TryMoveForMindSpin, NodeType=Sequence, Child[0]=SafeToMove-Sectoid, Child[1]=IsAbilityReady-MindSpin, Child[2]=SelectTargetForMindSpin, Child[3]=MoveSectoidIfFirstAbility-MindSpin)
+Behaviors=(BehaviorName=MoveSectoidIfFirstAbility-MindSpin, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindMindSpinDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindMindSpinDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-MindSpin, Child[2]=RestrictToEnemyLOS, Child[3]=FindRestrictedDestination-Sectoid)

; Special Sectoid flanked move behaviors - try to move out of enemy LOS entirely when flanked.
+Behaviors=(BehaviorName=DoIfFlankedMove-Sectoid, NodeType=Sequence, Child[0]=CheckIfNeedToMove, Child[1]=FlankedMove-Sectoid)
+Behaviors=(BehaviorName=FlankedMove-Sectoid, NodeType=Selector, Child[0]=MoveUnsafe-Sectoid_Hide, Child[1]=MoveUnsafe-Sectoid)

; -------------------- Viper --------------------------------------------------

; Vipers are predatory. They prefer to isolate single targets and crush them. If threatened up close, they tend to use
; their poison spit to disable the enemy. They like high places and happily use their plasma guns if they have a 
; good shot. Vipers are naturally solitary and tend to ignore the rest of the alien group to do their own thing.

-Behaviors=(BehaviorName=ViperRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=ConsiderTonguePullPriorityOrMelee, \\
	Child[1]=TryGetOverHere, \\
	Child[2]=TryMoveThenPoisonSpit, \\
	Child[3]=TryMoveThenPoisonSpitSingle, \\
	Child[4]=SelectMoveStandard, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=ViperRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=StandardMeleeAttack, \\
	Child[1]=TryGetOverHereFlankingOnly, \\
	Child[2]=TryViperPriority0Action, \\
	Child[3]=TryViperPriority1Action, \\
	Child[4]=TryViperPriority2Action, \\
	Child[5]=Move-Viper, \\
	Child[6]=TryViperPriority3Action, \\
	Child[7]=HuntEnemyWithCover)

-Behaviors=(BehaviorName=ViperRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryStandardMelee, \\
	Child[1]=TryPoisonSpit, \\
	Child[2]=TryGetOverHere, \\
	Child[3]=TryPoisonSpitSingle, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=DoIfFlankedMove, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=SelectMoveStandard)
+Behaviors=(BehaviorName=ViperRedLastActionSelector, NodeType=Selector, \\
    Child[0]=StandardMeleeAttack, \\
	Child[1]=TryGetOverHereFlankingOnly, \\
	Child[2]=TryViperPriority0Action, \\
	Child[3]=TryViperPriority1Action, \\
	Child[4]=TryViperPriority2Action, \\
	Child[5]=TryViperPriority3Action, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=Move-Viper)

+Behaviors=(BehaviorName=TryViperPriority0Action, NodeType=RandSelector,	Child[0]=DoIfFlankedMove,							Param[0]=25, \\
																			Child[1]=TryPoisonSpit,								Param[1]=75)
+Behaviors=(BehaviorName=TryViperPriority1Action, NodeType=RandSelector,	Child[0]=TryMoveThenGetOverHere,					Param[0]=50, \\
																			Child[1]=TryFlankingMoveIfFirstAbility-Viper,		Param[1]=20, \\
																			Child[2]=TryStandardMelee,							Param[2]=30)
+Behaviors=(BehaviorName=TryViperPriority2Action, NodeType=RandSelector,	Child[0]=TryMoveThenPoisonSpit,						Param[0]=30, \\
																			Child[1]=TryFlankingDashMoveIfFirstAbility-Viper,	Param[1]=50, \\
																			Child[2]=NeedsReload,								Param[2]=20)
+Behaviors=(BehaviorName=TryViperPriority3Action, NodeType=RandSelector,	Child[0]=TryPoisonSpitSingle,						Param[0]=20, \\
																			Child[1]=TryShootOrReloadOrOverwatch,				Param[1]=50, \\
																			Child[2]=TryGetOverHere,							Param[2]=30)

; Viper movement
+Behaviors=(BehaviorName=Move-Viper, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=MoveUnsafe-Viper)
+Behaviors=(BehaviorName=MoveUnsafe-Viper, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Viper, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=TryFlankingMoveIfFirstAbility-Viper, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=TryFlankingMove-Viper)
+Behaviors=(BehaviorName=TryFlankingMove-Viper, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=TryFlankingMoveUnsafe-Viper)
+Behaviors=(BehaviorName=TryFlankingMoveUnsafe-Viper, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDestination-Viper, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindFlankDestination-Viper, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Viper)

+Behaviors=(BehaviorName=TryFlankingDashMoveIfFirstAbility-Viper, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=TryFlankingDashMove-Viper)
+Behaviors=(BehaviorName=TryFlankingDashMove-Viper, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=TryFlankingDashMoveUnsafe-Viper)
+Behaviors=(BehaviorName=TryFlankingDashMoveUnsafe-Viper, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDashDestination-Viper, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindFlankDashDestination-Viper, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=UseDashMovement, Child[4]=FindRestrictedDestination-Viper)

; Use Viper movement profile for abilities
-Behaviors=(BehaviorName=FindPoisonSpitDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-PoisonSpit, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Standard)
+Behaviors=(BehaviorName=FindPoisonSpitDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-PoisonSpit, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Viper)

; Tongue pull behaviors
+Behaviors=(BehaviorName=IsAbilityReady-GetOverHere, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-GetOverHere, NodeType=Action)

+Behaviors=(BehaviorName=TryMoveThenGetOverHere, NodeType=Selector, Child[0]=TryMoveForGetOverHere, Child[1]=TryGetOverHereFlankingOnly)
+Behaviors=(BehaviorName=TryMoveForGetOverHere, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-GetOverHere, Child[2]=SelectTargetForGetOverHere, Child[3]=MoveViperIfFirstAbility-GetOverHere)
+Behaviors=(BehaviorName=MoveViperIfFirstAbility-GetOverHere, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindGetOverHereDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindGetOverHereDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-GetOverHere, Child[2]=RestrictToFlanking, Child[3]=RestrictToEnemyLOS, Child[4]=FindRestrictedDestination-Viper_Pull)

-Behaviors=(BehaviorName=TargetSelectIterationForGetOverHere, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations, Child[2]=TargetScoreInvalidateCivilians, Child[3]=SSTargetScoreInvalidTonguePullTargets, Child[4]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetSelectIterationForGetOverHere, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations, Child[2]=TargetScoreInvalidateCivilians, Child[3]=SSTargetScoreInvalidTonguePullTargets, Child[4]=TargetScoreClosestValidTarget, Child[5]=UpdateBestTarget)

+Behaviors=(BehaviorName=TryGetOverHereFlankingOnly, NodeType=Sequence, Child[0]=IsAbilityAvailable-GetOverHere, Child[1]=SelectTargetForGetOverHereFlankingOnly, Child[2]=SelectAbility-GetOverHere)

+Behaviors=(BehaviorName=SelectTargetForGetOverHereFlankingOnly, NodeType=Sequence, Child[0]=SetTargetStack-GetOverHere, Child[1]=SelectBestTargetForGetOverHereFlankingOnly, Child[2]=HasValidTarget-GetOverHere)
+Behaviors=(BehaviorName=SelectBestTargetForGetOverHereFlankingOnly, NodeType=RepeatUntilFail, Child[0]=TargetSelectIterationForGetOverHereFlankingOnly)
+Behaviors=(BehaviorName=TargetSelectIterationForGetOverHereFlankingOnly, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations, Child[2]=TargetScoreInvalidateCivilians, Child[3]=SSTargetScoreInvalidTonguePullTargets, Child[4]=TargetScoreClosestValidTarget, Child[5]=TargetScoreFlankingOnly, Child[6]=UpdateBestTarget)

+Behaviors=(BehaviorName=TargetScoreFlankingOnly, NodeType=Selector, Child[0]=ScoreTargetIfFlanked, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=ScoreTargetIfFlankedOnly, NodeType=Sequence, Child[0]=IsFlankingTarget, Child[1]=TargetIsEnemy, Child[2]=AddToTargetScore_0) 
