[XComGame.XGAIBehavior]
+m_arrMoveWeightProfile=(Profile=Advent_Generic, fCoverWeight=3.0f, fDistanceWeight=4.0f, fFlankingWeight=2.0f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=1.5f, fAllyVisWeight=3.0f, fCloseModifier=1.0f, fFarModifier=1.0f) 
+m_arrMoveWeightProfile=(Profile=Advent_Leader, fCoverWeight=4.0f, fDistanceWeight=3.0f, fFlankingWeight=0.5f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=1.5f, fAllyVisWeight=3.0f, fCloseModifier=0.9f, fFarModifier=1.1f) 

[XComGame.X2AIBTBehaviorTree]
+Behaviors=(BehaviorName=FindDestination-Advent_Generic, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Advent_Leader, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Advent_Generic, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Advent_Leader, NodeType=Action)

+Behaviors=(BehaviorName=FindFlankDestination_Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Advent_Generic)
+Behaviors=(BehaviorName=FindFlankDashDestination_Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=UseDashMovement, Child[4]=FindRestrictedDestination-Advent_Generic)

+Behaviors=(BehaviorName=HasAtLeastTwoVisibleAllies, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">=", Param[2]="2")
+Behaviors=(BehaviorName=HasAtLeastThreeVisibleEnemies, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]=">=", Param[2]="3")
+Behaviors=(BehaviorName=HasSuppressor, NodeType=StatCondition, Param[0]=SuppressorCount, Param[1]=">", Param[2]="0")
+Behaviors=(BehaviorName=ExactlyOneOverwatcher, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]="=", Param[2]="1")
+Behaviors=(BehaviorName=NoMoreThanOneOverwatcher, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]="<", Param[2]="2")
+Behaviors=(BehaviorName=HasOverwatchingTeammate, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">", Param[2]="0", Param[3]="1")
+Behaviors=(BehaviorName=NotLeader, NodeType=Inverter, Child[0]=IsMyJob-Leader)


; ------------- ADVENT Doctrine -------------
; ADVENT movement selection by job
+Behaviors=(BehaviorName=MoveByJob_Advent, NodeType=Selector, Child[0]=SelectMoveIfLeader_Advent, Child[1]=Move_Advent_Generic)
+Behaviors=(BehaviorName=SelectMoveIfLeader_Advent, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=Move_Advent_Leader)

+Behaviors=(BehaviorName=Move_Advent_Generic, NodeType=Sequence, Child[0]=SafeToMove_Advent, Child[1]=MoveUnsafe_Advent_Generic)
+Behaviors=(BehaviorName=MoveUnsafe_Advent_Generic, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Advent_Generic, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=Move_Advent_Leader, NodeType=Sequence, Child[0]=SafeToMove_Advent, Child[1]=MoveUnsafe_Advent_Leader)
+Behaviors=(BehaviorName=MoveUnsafe_Advent_Leader, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Advent_Leader, Child[2]=SelectAbility-StandardMove)

; Flanking moves are used by ADVENT with the Agggressor job. They have relaxed "safe" restrictions to draw overwatch.
+Behaviors=(BehaviorName=TryFlankingMove_Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoMoreThanOneOverwatcher, Child[2]=TryFlankingMoveUnsafe_Advent)
+Behaviors=(BehaviorName=TryFlankingMoveUnsafe_Advent, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDestination_Advent, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryFlankingDash_Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=TryFlankingDashUnsafe_Advent)
+Behaviors=(BehaviorName=TryFlankingDashUnsafe_Advent, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDashDestination_Advent, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=TryFlankIfAggressor_Advent, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=IsMyJob-Aggressor, Child[2]=TryFlankingMove_Advent, Child[3]=TryFlankingDash_Advent)

; Special SafeToMove behavior with no randomness.
+Behaviors=(BehaviorName=SafeToMove_Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoVisibleOverwatchers)

; Currently unused
+Behaviors=(BehaviorName=ReloadIfShotAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot, Child[2]=NeedsReload)

; These are changed to take all randomness out of the ADVENT AI's decision-making for overwatch. They are, after all, predictable.
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_Advent, NodeType=Selector, Child[0]=ConsiderTakingOverwatch_Advent, Child[1]=ShootIfAvailable, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ConsiderTakingOverwatch_Advent, NodeType=Selector, Child[0]=ConsiderTakingOverwatchAllUnits_Advent)
+Behaviors=(BehaviorName=ConsiderTakingOverwatchAllUnits_Advent, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=NoOverwatchingTeammates, Child[2]=HasAtLeastThreeVisibleEnemies, Child[3]=HasAtLeastTwoVisibleAllies, Child[4]=TryOverwatch)

+Behaviors=(BehaviorName=TryMarkTargetOptionIfLeader, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=TryMarkTargetOption)

; -------------------- ADVENT Trooper AI BEHAVIOR TREE NODES BEGIN ------------
-Behaviors=(BehaviorName=AdventRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrAggressive, \\
	Child[2]=TryMoveThenGrenade, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdventRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=TryFlankIfAggressor_Advent, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=TryMarkTargetOptionIfLeader, \\
	Child[4]=NeedsReload, \\
	Child[5]=MoveByJob_Advent, \\
	Child[6]=TryMoveThenGrenade, \\
	Child[7]=TryShootOrReloadOrOverwatch_Advent, \\
	Child[8]=HuntEnemyWithCover)

-Behaviors=(BehaviorName=AdventRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrAggressive)
+Behaviors=(BehaviorName=AdventRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMarkTargetOptionIfLeader, \\
	Child[1]=TryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch_Advent, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=MoveByJob_Advent)

; -------------------- ADVENT Captain AI BEHAVIOR TREE NODES BEGIN ------------
-Behaviors=(BehaviorName=AdvCaptain_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryMarkTargetOption, \\
	Child[2]=SelectMove_JobOrDefensive, \\
	Child[3]=AdvCaptainTryMoveThenGrenade, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdvCaptain_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedFirstActionSelector)

-Behaviors=(BehaviorName=AdvCaptain_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMarkTargetOption, \\
	Child[1]=AdvCaptainTryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrDefensive)
+Behaviors=(BehaviorName=AdvCaptain_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedLastActionSelector)

; -------------------- ADVENT Stun Lancer AI BEHAVIOR TREE NODES BEGIN --------
-Behaviors=(BehaviorName=AdventSLFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=SelectMove_JobOrMelee, \\
	Child[3]=TryMoveThenGrenade, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdventSLFirstActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedFirstActionSelector)

-Behaviors=(BehaviorName=AdventSLLastActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=TryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrMelee)
+Behaviors=(BehaviorName=AdventSLLastActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedLastActionSelector)
