[XComGame.XGAIBehavior]
+m_arrMoveWeightProfile=(Profile=Advent_Generic, fCoverWeight=3.0f, fDistanceWeight=4.0f, fFlankingWeight=2.0f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=1.5f, fAllyVisWeight=3.0f, fCloseModifier=1.0f, fFarModifier=1.0f) 
+m_arrMoveWeightProfile=(Profile=Advent_Leader, fCoverWeight=4.0f, fDistanceWeight=3.0f, fFlankingWeight=0.5f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=1.5f, fAllyVisWeight=3.0f, fCloseModifier=0.9f, fFarModifier=1.1f) 
+m_arrMoveWeightProfile=(Profile=Sectoid, fCoverWeight=4.0f, fDistanceWeight=1.0f, fFlankingWeight=0.5f, fEnemyVisWeight=-2.0f, fEnemyVisWeightPeak1=3.5f, fAllyVisWeight=0.5f, fCloseModifier=0.9f, fFarModifier=1.1f) 
+m_arrMoveWeightProfile=(Profile=Viper, fCoverWeight=2.0f, fDistanceWeight=2.0f, fFlankingWeight=3.0f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=2.0f, fAllyVisWeight=2.0f, fCloseModifier=1.1f, fFarModifier=0.9f) 

+m_arrMoveWeightProfile=(Profile=Dummy, fCoverWeight=2.0f, fDistanceWeight=0.5f, fFlankingWeight=0.5f, fEnemyVisWeight=-3.0f, fEnemyVisWeightPeak1=0.0f, fAllyVisWeight=1.0f, fCloseModifier=0.9f, fFarModifier=1.1f) 

[XComGame.X2AIBTBehaviorTree]
+Behaviors=(BehaviorName=FindDestination-Advent_Generic, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Advent_Leader, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Sectoid, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-Viper, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Advent_Generic, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Advent_Leader, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Sectoid, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-Viper, NodeType=Action)

+Behaviors=(BehaviorName=HasAtLeastTwoVisibleAllies, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">=", Param[2]="2")
+Behaviors=(BehaviorName=HasAtLeastTwoVisibleEnemies, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]=">=", Param[2]="2")
+Behaviors=(BehaviorName=HasAtLeastThreeVisibleEnemies, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]=">=", Param[2]="3")
+Behaviors=(BehaviorName=HasSuppressor, NodeType=StatCondition, Param[0]=SuppressorCount, Param[1]=">", Param[2]="0")
+Behaviors=(BehaviorName=ExactlyOneOverwatcher, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]="=", Param[2]="1")
+Behaviors=(BehaviorName=NoMoreThanOneOverwatcher, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]="<", Param[2]="2")
+Behaviors=(BehaviorName=HasOverwatchingTeammate, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">", Param[2]="0", Param[3]="1")
+Behaviors=(BehaviorName=NotLeader, NodeType=Inverter, Child[0]=IsMyJob-Leader)


; ------------- ADVENT Doctrine -------------
; ADVENT movement selection by job
+Behaviors=(BehaviorName=MoveByJob_Advent, NodeType=Selector, Child[0]=SelectMoveIfLeader_Advent, Child[1]=Move_Advent_Generic)
+Behaviors=(BehaviorName=SelectMoveIfLeader_Advent, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=Move_Advent_Leader)

+Behaviors=(BehaviorName=Move_Advent_Generic, NodeType=Sequence, Child[0]=SafeToMove_Advent, Child[1]=MoveUnsafe_Advent_Generic)
+Behaviors=(BehaviorName=MoveUnsafe_Advent_Generic, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Advent_Generic, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=Move_Advent_Leader, NodeType=Sequence, Child[0]=SafeToMove_Advent, Child[1]=MoveUnsafe_Advent_Leader)
+Behaviors=(BehaviorName=MoveUnsafe_Advent_Leader, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Advent_Leader, Child[2]=SelectAbility-StandardMove)

; Flanking moves are used by ADVENT with the Agggressor job. They have relaxed "safe" restrictions to draw overwatch.
+Behaviors=(BehaviorName=FindFlankDestination_Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Advent_Generic)
+Behaviors=(BehaviorName=FindFlankDashDestination_Advent, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=UseDashMovement, Child[4]=FindRestrictedDestination-Advent_Generic)

+Behaviors=(BehaviorName=TryFlankingMove_Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoMoreThanOneOverwatcher, Child[2]=TryFlankingMoveUnsafe_Advent)
+Behaviors=(BehaviorName=TryFlankingMoveUnsafe_Advent, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDestination_Advent, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryFlankingDash_Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=TryFlankingDashUnsafe_Advent)
+Behaviors=(BehaviorName=TryFlankingDashUnsafe_Advent, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDashDestination_Advent, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=TryFlankIfAggressor_Advent, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=IsMyJob-Aggressor, Child[2]=TryFlankingMove_Advent, Child[3]=TryFlankingDash_Advent)

; Special SafeToMove behavior with no randomness.
+Behaviors=(BehaviorName=SafeToMove_Advent, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoVisibleOverwatchers)

; Currently unused
+Behaviors=(BehaviorName=ReloadIfShotAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot, Child[2]=NeedsReload)

; These are changed to take all randomness out of the ADVENT AI's decision-making for overwatch. They are, after all, predictable.
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_Advent, NodeType=Selector, Child[0]=ConsiderTakingOverwatch_Advent, Child[1]=ShootIfAvailable, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ConsiderTakingOverwatch_Advent, NodeType=Selector, Child[0]=ConsiderTakingOverwatchAllUnits_Advent)
+Behaviors=(BehaviorName=ConsiderTakingOverwatchAllUnits_Advent, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=NoOverwatchingTeammates, Child[2]=HasAtLeastThreeVisibleEnemies, Child[3]=HasAtLeastTwoVisibleAllies, Child[4]=TryOverwatch)

+Behaviors=(BehaviorName=TryMarkTargetOptionIfLeader, NodeType=Sequence, Child[0]=IsMyJob-Leader, Child[1]=TryMarkTargetOption)

; -------------------- ADVENT Trooper AI BEHAVIOR TREE NODES BEGIN ------------

; This covers all the ADVENT unit types (trooper, captain, stun lancer, MEC, and shieldbearer).
; The goal is to give ADVENT units simple, predictable behavior that is still tactically
; effective. There are only two move profiles, one for the current leader and one for other
; units. Other jobs make a difference primarily in action selection.

-Behaviors=(BehaviorName=AdventRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrAggressive, \\
	Child[2]=TryMoveThenGrenade, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdventRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=TryFlankIfAggressor_Advent, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=TryMarkTargetOptionIfLeader, \\
	Child[4]=NeedsReload, \\
	Child[5]=MoveByJob_Advent, \\
	Child[6]=TryMoveThenGrenade, \\
	Child[7]=TryShootOrReloadOrOverwatch_Advent, \\
	Child[8]=HuntEnemyWithCover)

-Behaviors=(BehaviorName=AdventRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrAggressive)
+Behaviors=(BehaviorName=AdventRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMarkTargetOptionIfLeader, \\
	Child[1]=TryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch_Advent, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=MoveByJob_Advent)

; -------------------- ADVENT Captain AI BEHAVIOR TREE NODES BEGIN ------------
-Behaviors=(BehaviorName=AdvCaptain_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryMarkTargetOption, \\
	Child[2]=SelectMove_JobOrDefensive, \\
	Child[3]=AdvCaptainTryMoveThenGrenade, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdvCaptain_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedFirstActionSelector)

-Behaviors=(BehaviorName=AdvCaptain_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMarkTargetOption, \\
	Child[1]=AdvCaptainTryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrDefensive)
+Behaviors=(BehaviorName=AdvCaptain_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedLastActionSelector)

; -------------------- ADVENT Stun Lancer AI BEHAVIOR TREE NODES BEGIN --------
-Behaviors=(BehaviorName=AdventSLFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=SelectMove_JobOrMelee, \\
	Child[3]=TryMoveThenGrenade, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdventSLFirstActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedFirstActionSelector)

-Behaviors=(BehaviorName=AdventSLLastActionSelector, NodeType=Selector, \\
	Child[0]=TryStunLance, \\
	Child[1]=TryGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrMelee)
+Behaviors=(BehaviorName=AdventSLLastActionSelector, NodeType=Selector, \\
	Child[0]=AdventRedLastActionSelector)

+Behaviors=(BehaviorName=ScoreTargetIfPriorityObject, NodeType=Sequence, Child[0]=TargetIsPriorityObject, Child[1]=AddToTargetScore_0)
+Behaviors=(BehaviorName=TargetScoreAvoidPriorityObject, NodeType=Selector, Child[0]=ScoreTargetIfPriorityObject, Child[1]=AddToTargetScore_50)
+Behaviors=(BehaviorName=ScoreTargetIfClosestValidTarget, NodeType=Sequence, Child[0]=TargetIsClosestValidTarget, Child[1]=AddToTargetScore_20)
+Behaviors=(BehaviorName=TargetScoreClosestValidTarget, NodeType=Selector, Child[0]=ScoreTargetIfClosestValidTarget, Child[1]=AddToTargetScore_0)

-Behaviors=(BehaviorName=EvaluateTargetForStunLance, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian, )
+Behaviors=(BehaviorName=EvaluateTargetForStunLance, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian, Child[5]=TargetScoreAvoidPriorityObject, Child[6]=TargetScoreClosestValidTarget)

; -------------------- Sectoid AI BEHAVIOR TREE NODES BEGIN -------------------

; Sectoids are fundamentally cowardly, which they manifest by skulking around the outside of the
; battle trying to only engage one or two enemies at a time. When confronted by multiple enemies,
; they tend to either flee or fire their plasma pistols wildly. When not panicking they prefer
; to use their psi abilities, usually moving to avoid being seen by enemies other than their target.

-Behaviors=(BehaviorName=SectoidRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrDefensive, \\
	Child[2]=TryPsiReanimationOrMindSpinOption, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=SectoidRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove_Sectoid, \\
	Child[1]=TrySectoidPanic, \\
	Child[2]=TryMoveThenPsiReanimationOrMindSpin, \\
	Child[3]=Move_Sectoid, \\
	Child[4]=TryPsiReanimationOrMindSpinOption, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

-Behaviors=(BehaviorName=SectoidRedLastActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryPsiReanimationOrMindSpinOption, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrDefensive)
+Behaviors=(BehaviorName=SectoidRedLastActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove_Sectoid, \\
	Child[1]=TrySectoidPanic, \\
	Child[2]=TryPsiReanimationOrMindSpinOption, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=Move_Sectoid)

+Behaviors=(BehaviorName=TryMoveThenPsiReanimationOrMindSpin, NodeType=RandSelector, Child[0]=TryMoveThenPsiReanimation, Param[0]=66, Child[1]=TryMoveThenMindSpin, Param[1]=34)

; Sectoid movement
+Behaviors=(BehaviorName=Move_Sectoid, NodeType=Sequence, Child[0]=SafeToMove_Sectoid, Child[1]=MoveUnsafe_Sectoid)
+Behaviors=(BehaviorName=MoveUnsafe_Sectoid, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Sectoid, Child[2]=SelectAbility-StandardMove)

; Sectoid hiding - these use the standard Sectoid move profile, but restrict to tiles outside of enemy LOS.
+Behaviors=(BehaviorName=FindDestination-Sectoid_Hide, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictFromKnownEnemyLoS, Child[2]=FindRestrictedDestination-Sectoid)
+Behaviors=(BehaviorName=Move_Sectoid_Hide, NodeType=Sequence, Child[0]=SafeToMove_Sectoid, Child[1]=MoveUnsafe_Sectoid_Hide)
+Behaviors=(BehaviorName=MoveUnsafe_Sectoid_Hide, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Sectoid_Hide, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=FindDashDestination-Sectoid_Hide, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictFromKnownEnemyLoS, Child[2]=UseDashMovement, Child[3]=FindRestrictedDestination-Sectoid)
+Behaviors=(BehaviorName=DashMove_Sectoid_Hide, NodeType=Sequence, Child[0]=SafeToMove_Sectoid, Child[1]=DashMoveUnsafe_Sectoid_Hide)
+Behaviors=(BehaviorName=DashMoveUnsafe_Sectoid_Hide, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDashDestination-Sectoid_Hide, Child[2]=SelectAbility-StandardMove)

; Sectoids are cowardly and won't move if there are any suppressors or overwatchers.
+Behaviors=(BehaviorName=SafeToMove_Sectoid, NodeType=Sequence, Child[0]=NoVisibleSuppressors, Child[1]=NoVisibleOverwatchers)

; Special Sectoid "panic" behavior. A Sectoid in a scary situation has a 50% chance to try to flee to somewhere it can't
; be seen by enemies, and a 50% chance to shoot a random enemy.
+Behaviors=(BehaviorName=TrySectoidPanic, NodeType=Sequence, Child[0]=IsSectoidScared, Child[1]=SectoidPanic)
+Behaviors=(BehaviorName=IsSectoidScared, NodeType=Selector, Child[0]=HasSuppressor, Child[1]=SectoidOutnumberedCheck)
+Behaviors=(BehaviorName=SectoidPanic, NodeType=RandSelector, Child[0]=SectoidPanicMove, Param[0]=50, Child[1]=SectoidPanicFire, Param[1]=50)
+Behaviors=(BehaviorName=SectoidPanicMove, NodeType=Selector, Child[0]=Move_Sectoid_Hide, Child[1]=DashMoveUnsafe_Sectoid_Hide)
+Behaviors=(BehaviorName=SectoidPanicFire, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_SectoidPanic, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_SectoidPanic, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-StandardShot)

; A sectoid has a chance to panic if it sees at least two enemies. There is a 20% chance per enemy that the sectoid will
; panic. This works out to the following panic chances:
; Enemies	Chance
; 2			36.0%
; 3			48.8%
; 4			59.0%
; 5			67.2%
; 6			73.8%
+Behaviors=(BehaviorName=HasBTVar-SectoidPanicked, NodeType=Condition)
+Behaviors=(BehaviorName=SetSectoidPanickedTrue, NodeType=Action, Param[0]=SetBTVar, Param[1]="SectoidPanicked", Param[2]="1")
+Behaviors=(BehaviorName=SetSectoidPanickedFalse, NodeType=Action, Param[0]=SetBTVar, Param[1]="SectoidPanicked", Param[2]="0")
+Behaviors=(BehaviorName=IsSectoidPanicked, NodeType=StatCondition, Param[0]=BTVar, Param[1]="!=", Param[2]="0", Param[3]="SectoidPanicked")
+Behaviors=(BehaviorName=InitSectoidPanickedVar, NodeType=Selector, Child[0]=HasBTVar-SectoidPanicked, Child[1]=UpdateSectoidPanickedVar)
+Behaviors=(BehaviorName=UpdateSectoidPanickedVar, NodeType=Selector, Child[0]=TrySetSectoidPanickedTrue, Child[1]=SetSectoidPanickedFalse)
+Behaviors=(BehaviorName=TrySetSectoidPanickedTrue, NodeType=Sequence, Child[0]=SectoidPanicCheck, Child[1]=SetSectoidPanickedTrue)
+Behaviors=(BehaviorName=SectoidPanicCheck, NodeType=Sequence, Child[0]=HasAtLeastTwoVisibleEnemies, Child[1]=SetVisiblePotentialTargetStack, Child[2]=RepeatSectoidPanicRoll, Child[3]=PanicRollFailed)
+Behaviors=(BehaviorName=RepeatSectoidPanicRoll, NodeType=RepeatUntilFail, Child[0]=IterateSectoidPanicRoll)
+Behaviors=(BehaviorName=IterateSectoidPanicRoll, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=Roll80ToNotPanic, Child[2]=PanicRollPassed)
+Behaviors=(BehaviorName=Roll80ToNotPanic, NodeType=RandSelector, Child[0]=SetPanicFalse, Param[0]=80, Child[1]=SetPanicTrue, Param[1]=20)
+Behaviors=(BehaviorName=SetPanicTrue, NodeType=Action, Param[0]=SetBTVar, Param[1]="Panic", Param[2]="1")
+Behaviors=(BehaviorName=SetPanicFalse, NodeType=Action, Param[0]=SetBTVar, Param[1]="Panic", Param[2]="0")
+Behaviors=(BehaviorName=PanicRollFailed, NodeType=StatCondition, Param[0]=BTVar, Param[1]="!=", Param[2]="0", Param[3]="Panic")
+Behaviors=(BehaviorName=PanicRollPassed, NodeType=StatCondition, Param[0]=BTVar, Param[1]="==", Param[2]="0", Param[3]="Panic")

+Behaviors=(BehaviorName=SectoidOutnumberedCheck, NodeType=Sequence, Child[0]=InitSectoidPanickedVar, Child[1]=IsSectoidPanicked)

; Psi Reanimation behaviors
+Behaviors=(BehaviorName=IsAbilityReady-PsiReanimation, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-PsiReanimation, NodeType=Action)

+Behaviors=(BehaviorName=TryMoveThenPsiReanimation, NodeType=Selector, Child[0]=TryMoveForPsiReanimation, Child[1]=TryPsiReanimation)
+Behaviors=(BehaviorName=TryMoveForPsiReanimation, NodeType=Sequence, Child[0]=SafeToMove_Sectoid, Child[1]=IsAbilityReady-PsiReanimation, Child[2]=SelectTargetForPsiReanimation, Child[3]=MoveStandardIfFirstAbility-PsiReanimation)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-PsiReanimation, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindPsiReanimationDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindPsiReanimationDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-PsiReanimation, Child[2]=FindRestrictedDestination-Sectoid)

; Mind Spin behaviors
+Behaviors=(BehaviorName=IsAbilityReady-MindSpin, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-MindSpin, NodeType=Action)

+Behaviors=(BehaviorName=TryMoveThenMindSpin, NodeType=Selector, Child[0]=TryMoveForMindSpin, Child[1]=TryMindSpinOption)
+Behaviors=(BehaviorName=TryMoveForMindSpin, NodeType=Sequence, Child[0]=SafeToMove_Sectoid, Child[1]=IsAbilityReady-MindSpin, Child[2]=SelectTargetForMindSpin, Child[3]=MoveStandardIfFirstAbility-MindSpin)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-MindSpin, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindMindSpinDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindMindSpinDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-MindSpin, Child[2]=RestrictToEnemyLOS, Child[3]=FindRestrictedDestination-Sectoid)

; Special Sectoid flanked move behaviors - try to move out of enemy LOS entirely when flanked.
+Behaviors=(BehaviorName=DoIfFlankedMove_Sectoid, NodeType=Sequence, Child[0]=CheckIfNeedToMove, Child[1]=FlankedMove_Sectoid)
+Behaviors=(BehaviorName=FlankedMove_Sectoid, NodeType=Selector, Child[0]=MoveUnsafe_Sectoid_Hide, Child[1]=MoveUnsafe_Sectoid)

; -------------------- Viper --------------------------------------------------

; Vipers are predatory. They prefer to isolate single targets and crush them. If threatened up close, they tend to use
; their poison spit to disable the enemy. They like high places and happily use their plasma guns if they have a 
; good shot.

-Behaviors=(BehaviorName=ViperRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=ConsiderTonguePullPriorityOrMelee, \\
	Child[1]=TryGetOverHere, \\
	Child[2]=TryMoveThenPoisonSpit, \\
	Child[3]=TryMoveThenPoisonSpitSingle, \\
	Child[4]=SelectMoveStandard, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=ViperRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=StandardMeleeAttack, \\
	Child[1]=TryViperPriority0Action, \\
	Child[2]=TryViperPriority1Action, \\
	Child[3]=TryViperPriority2Action, \\
	Child[4]=Move_Viper, \\
	Child[5]=TryViperPriority3Action, \\
	Child[6]=HuntEnemyWithCover)

-Behaviors=(BehaviorName=ViperRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryStandardMelee, \\
	Child[1]=TryPoisonSpit, \\
	Child[2]=TryGetOverHere, \\
	Child[3]=TryPoisonSpitSingle, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=DoIfFlankedMove, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=SelectMoveStandard)
+Behaviors=(BehaviorName=ViperRedLastActionSelector, NodeType=Selector, \\
    Child[0]=StandardMeleeAttack, \\
	Child[1]=TryViperPriority0Action, \\
	Child[2]=TryViperPriority1Action, \\
	Child[3]=TryViperPriority2Action, \\
	Child[4]=TryViperPriority3Action, \\
	Child[5]=HuntEnemyWithCover, \\
	Child[6]=Move_Viper)

+Behaviors=(BehaviorName=TryViperPriority0Action, NodeType=RandSelector,	Child[0]=DoIfFlankedMove,							Param[0]=25, \\
																			Child[1]=TryPoisonSpit,								Param[1]=75)
+Behaviors=(BehaviorName=TryViperPriority1Action, NodeType=RandSelector,	Child[0]=TryMoveThenGetOverHere,					Param[0]=50, \\
																			Child[1]=TryFlankingMoveIfFirstAbility_Viper,		Param[1]=20, \\
																			Child[2]=TryStandardMelee,							Param[2]=30)
+Behaviors=(BehaviorName=TryViperPriority2Action, NodeType=RandSelector,	Child[0]=TryMoveThenPoisonSpit,						Param[0]=30, \\
																			Child[1]=TryFlankingDashMoveIfFirstAbility_Viper,	Param[1]=50, \\
																			Child[2]=NeedsReload,								Param[2]=20)
+Behaviors=(BehaviorName=TryViperPriority3Action, NodeType=RandSelector,	Child[0]=TryPoisonSpitSingle,						Param[0]=50, \\
																			Child[1]=TryShootOrReloadOrOverwatch,				Param[1]=50)

; Viper movement
+Behaviors=(BehaviorName=Move_Viper, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=MoveUnsafe_Viper)
+Behaviors=(BehaviorName=MoveUnsafe_Viper, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindDestination-Viper, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=TryFlankingMoveIfFirstAbility_Viper, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=TryFlankingMove_Viper)
+Behaviors=(BehaviorName=TryFlankingMove_Viper, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=TryFlankingMoveUnsafe_Viper)
+Behaviors=(BehaviorName=TryFlankingMoveUnsafe_Viper, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDestination_Viper, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindFlankDestination_Viper, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Viper)

+Behaviors=(BehaviorName=TryFlankingDashMoveIfFirstAbility_Viper, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=TryFlankingDashMove_Viper)
+Behaviors=(BehaviorName=TryFlankingDashMove_Viper, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=TryFlankingDashMoveUnsafe_Viper)
+Behaviors=(BehaviorName=TryFlankingDashMoveUnsafe_Viper, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindFlankDashDestination_Viper, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindFlankDashDestination_Viper, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToFlanking, Child[2]=RestrictToEnemyLoS, Child[3]=UseDashMovement, Child[4]=FindRestrictedDestination-Viper)

; Use Viper movement profile for abilities
-Behaviors=(BehaviorName=FindPoisonSpitDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-PoisonSpit, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Standard)
+Behaviors=(BehaviorName=FindPoisonSpitDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-PoisonSpit, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-Viper)

; Tongue pull behaviors
+Behaviors=(BehaviorName=IsAbilityReady-GetOverHere, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-GetOverHere, NodeType=Action)

+Behaviors=(BehaviorName=TryMoveThenGetOverHere, NodeType=Selector, Child[0]=TryMoveForGetOverHere, Child[1]=TryGetOverHereIfHitChance50)
+Behaviors=(BehaviorName=TryMoveForGetOverHere, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-GetOverHere, Child[2]=SelectTargetForGetOverHere, Child[3]=MoveStandardIfFirstAbility-GetOverHere)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-GetOverHere, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindGetOverHereDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindGetOverHereDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-GetOverHere, Child[2]=RestrictToEnemyLOS, Child[3]=FindRestrictedDestination-Viper)
+Behaviors=(BehaviorName=TryGetOverHereIfHitChance50, NodeType=Sequence, Child[0]=IsAbilityAvailable-GetOverHere, Child[1]=SelectTargetForGetOverHere, Child[2]=SetPotentialTargetAsCurrentTarget, Child[3]=TonguePullHitChance50, Child[4]=SelectAbility-GetOverHere)
